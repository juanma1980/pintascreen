' Gambas class file

Inherits Dibujo
Private dx As Integer
Private dy As Integer
Private mouseinicioX As Integer
Private mouseinicioY As Integer
Private mousefinalX As Integer
Private mousefinalY As Integer

Private puntofin As Boolean = False
Private Dashes As Float[] = [5.0, 1.0, 1.0, 1.0]  'skip

Private h As Integer
Private w As Integer

'cambiar tamaño de forma dinamica
Private ptoSeleccionado As Integer '1 es para mover, 2 es para redimensionar
Private iconoDesplazar As Image = Image.Load("cambiarSize2.png")
Private ptoDimension As New Point

Private hrelleno As Boolean 'false: no se dibuja relleno el rectangulo, true: se dibuja relleno

Public Sub _new(...) '' Dos parametros

  mouseinicioX = param[0]
  mouseinicioY = param[1]

End

Public Sub dibuja()

  If puntofin = True Then

    If Super.getTamano() = 0 Then
      Paint.LineWidth = 8
    Else
      Paint.LineWidth = Super.getTamano()
    Endif

    If Super.getColor() = 0 Then
      Paint.LineCap = Paint.LineCapButt
      Paint.LineWidth = 3

      Paint.Dash = Dashes
      Paint.DashOffset = -5

      Paint.Brush = Paint.Color(Color.RGB(0, 0, 0))
      w = mousefinalX - mouseinicioX + 10 'conservo los anchos y largo anteriores
      h = mousefinalY - mouseinicioY + 10
    Else
      Paint.LineCap = Paint.LineCapRound
      Paint.Dash = Null
      Paint.DashOffset = 0
      Paint.Brush = Paint.Color(&H85000000 + Super.getColor())

    Endif

    Paint.Ellipse(mouseinicioX, mouseinicioY, w, h)

    If hrelleno Then
      Paint.Fill(True)
    Endif

    Paint.stroke

    If Super.ptoControl = True Then
      Paint.DrawImage(Me.iconoMover, mouseinicioX + ((mousefinalX - mouseinicioX) / 2) - 8, mouseinicioY + ((mousefinalY - mouseinicioY) / 2) - 8)
      dx = mouseinicioX + ((mousefinalX - mouseinicioX) / 2) + 8
      dy = mouseinicioY + ((mousefinalY - mouseinicioY) / 2) + 8
      Paint.stroke

      Paint.DrawImage(iconoDesplazar, ptoDimension.X - 16, ptoDimension.y - 16)
      Paint.stroke
    Endif

  Else
    'no lo dibujo porque el ultimo punto no eta definido.
  Endif

End

Public Sub ptofinal(x As Integer, y As Integer)

  mousefinalX = x
  mousefinalY = y
  ptoDimension.x = x
  ptoDimension.y = y
  puntofin = True

End

Public Sub getx() As Integer

  Return dx ' mouseinicioX

End

Public Sub gety() As Integer

  Return dy 'mouseinicioY

End

'---------------------------------------------
' mostrar propiedades
' ---------------------------------------------
Public Sub mostrarpropiedades()

  Dim pro As New FormCuadroPropiedades

  pro.mostrar(Me, ["PtoInicio_X", "PtoInicio_Y", "Ancho_X", "Alto_Y", "ColorElip|COLORBUTTON", "Relleno"])

End

Property PtoInicio_X As Integer
Property PtoInicio_Y As Integer
Property Ancho_X As Integer
Property Alto_Y As Integer

Property ColorElip As Integer

Private Function PtoInicio_X_Read() As Integer

  Return mouseinicioX

End

Private Sub PtoInicio_X_Write(Value As Integer)

  mouseinicioX = Value

End

Private Function PtoInicio_Y_Read() As Integer

  Return mouseinicioY

End

Private Sub PtoInicio_Y_Write(Value As Integer)

  mouseinicioY = value

End

Private Function ColorElip_Read() As Integer

  Return Super.getColor()

End

Private Sub ColorElip_Write(Value As Integer)

  Super.SetColor(value)

End

Private Function Ancho_X_Read() As Integer

  Dim an As Integer

  an = mousefinalX - mouseinicioX
  If an > 0 Then
    Return an
  Else
    Return -an
  Endif

End

Private Sub Ancho_X_Write(Value As Integer)

  mousefinalX = value + mouseinicioX
  w = value
  ptoDimension.x = mousefinalx

End

Private Function Alto_Y_Read() As Integer

  Dim al As Integer

  al = mousefinalY - mouseinicioY

  If al > 0 Then
    Return al
  Else
    Return (-al)
  Endif

End

Private Sub Alto_Y_Write(Value As Integer)

  mousefinalY = value + mouseinicioY
  h = value
  ptoDimension.y = mousefinalY

End

Property Relleno As Boolean

Private Function Relleno_Read() As Boolean

  Return hrelleno

End

Private Sub Relleno_Write(Value As Boolean)

  hrelleno = value

End

'-------------------------------------
' Para modificar tamaño del rectangulo
'-------------------------------------

Public Sub getxD() As Integer

  Return (ptoDimension.x - 16)

End

Public Sub getyD() As Integer

  Return (ptoDimension.Y - 16)

End

Public Sub informePtoSeleccionado(...)

  Select Case Param[0]
    Case "mover"
      ptoSeleccionado = 1

    Case "redimensiona"
      ptoSeleccionado = 2

  End Select

End

Public Sub desplaza(xX As Integer, yy As Integer)

  Select Case ptoSeleccionado
    Case 1 '"mover"
      mouseinicioX += xX - dx
      mouseinicioY += yy - dy

      mousefinalX += xx - dx
      mousefinaly += yy - dy

      ptoDimension.x += xx - dx
      ptoDimension.y += yy - dy

    Case 2 '"redimensiona"

      mousefinalX = xx '- dx
      mousefinaly = yy '- dy

      ptoDimension.x = xx ' - dx
      ptoDimension.y = yy '- dy

      w = mousefinalX - mouseinicioX + 10 'conservo los anchos y largo anteriores
      h = mousefinalY - mouseinicioY + 10
  End Select

End

Public Sub guardar() As String

  Dim contenido As String

  contenido = "dibujo|elipse|"
  contenido &= Str$(Super.getTamano()) & "|"
  contenido &= Str$(Super.getColor()) & "|"
  contenido &= Str$(mouseinicioX) & "|"
  contenido &= Str$(mouseinicioY) & "|"
  contenido &= Str$(mousefinalX) & "|"
  contenido &= Str$(mousefinalY) & "|"
  contenido &= Str$(puntofin) & "|"
  contenido &= Str$(hrelleno) & "|"
  contenido &= Str$(ptoDimension.x) & "|"
  contenido &= Str$(ptoDimension.y) & "|"
  Return contenido

End

Public Function abrir(Arraylinea As String[]) As Boolean

  If Arraylinea[1] = "elipse" Then
    Super.Settamano(Val(Arraylinea[2]))
    Super.SetColor(Val(Arraylinea[3]))
    mouseinicioX = Val(Arraylinea[4])
    mouseinicioY = Val(Arraylinea[5])
    mousefinalX = Val(Arraylinea[6])
    mousefinalY = Val(Arraylinea[7])
    puntofin = Val(Arraylinea[8])
    hrelleno = Val(Arraylinea[9])
    w = mousefinalX - mouseinicioX + 10
    h = mousefinalY - mouseinicioY + 10
    ptoDimension.X = Val(Arraylinea[10])
    ptoDimension.y = Val(Arraylinea[11])
    Return True
  Else
    Return False

  Endif

End
